ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/dbl-a/psychopy-experiments/MRI-nBack/MRI-nBack.psyexp
p7
sS'dataFileName'
p8
V/Users/dbl-a/psychopy-experiments/MRI-nBack/data/100_Rosvold CPT_2015_Feb_10_1350
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'Rosvold CPT'
p12
sS'dataNames'
p13
(lp14
S'key_resp_18.keys'
p15
aS'key_resp_18.rt'
p16
aS'key_resp_17.keys'
p17
aS'key_resp_17.rt'
p18
aS'key_resp_2.keys'
p19
aS'key_resp_2.rt'
p20
aS'key_resp_7.keys'
p21
aS'key_resp_7.rt'
p22
aS'key_resp_4.keys'
p23
aS'key_resp_4.rt'
p24
aS'key_resp_9.keys'
p25
aS'key_resp_11.keys'
p26
asS'autoLog'
p27
I01
sS'extraInfo'
p28
(dp29
Vparticipant
p30
V100
p31
sVGender
p32
Vfemale
p33
sVHandedness
p34
VRight
p35
sS'frameRate'
p36
cnumpy.core.multiarray
scalar
p37
(cnumpy
dtype
p38
(S'f8'
I0
I1
tRp39
(I3
S'<'
NNNI-1
I-1
I0
tbS'B\xe6\x00\xfb\x85\xeaM@'
tRp40
sS'expName'
p41
g12
sS'date'
p42
V2015_Feb_10_1350
p43
ssS'loopsUnfinished'
p44
(lp45
g1
(cpsychopy.data
TrialHandler
p46
g3
NtRp47
(dp48
S'origin'
p49
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1920, 1080]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'Gender': u'female', u'Handedness': u'Right', u'participant': u'100'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="Rosvold CPT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="debug" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="end">\u000a      <TextComponent name="text_9">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_9" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Thank you, the study is complete. Please wait patiently for the technician to assist you out of the MRI." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="20" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="NS_stopRecording">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_stopRecording" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.StopRecording()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="first_slide">\u000a      <TextComponent name="text_15">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_15" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A fixation will be placed onscreen during your preliminary scans/set up.&#10;&#10;Press Space Bar to continue when your participant is ready for the experiment.&#10;&#10;Press Space Bar to go to the fixation screen now." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_18">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_18" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="fixation">\u000a      <TextComponent name="text_7">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_7" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="120" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="2" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="nBack_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="nBack_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.sync()&#10;&#10;#pick random number from 1-100 for determining if this is an nBack round or not&#10;bias = randint(1, 100)&#10;print 'Bias:'&#10;print bias&#10;currentLetter = nBackLets[randint(0,25)]&#10;print currentLetter&#10;#check that enough rounds have passed to display an nBack&#10;if position-nBack &gt;= 0:&#10;    #determine if next letter will be new or a nBack match, currently 50/50 odds&#10;    if bias &lt; 50:&#10;        currentLetter = oldLets[position-nBack]&#10;        print &quot;nbacked&quot;&#10;        print currentLetter&#10;        corAns = '1'&#10;    else:&#10;        corAns = 'None'&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="key_resp_11">\u000a        <Param name="correctAns" val="'num_multiply','8'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_11" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="120" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="1" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="1" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply','8'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="59" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trials_3">\u000a      <TextComponent name="text_8">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_8" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$letters" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".5" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_10">\u000a        <Param name="correctAns" val="$correctButton" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_10" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="'''&#10;corAns = ''&#10;nBackLetter = 'A'&#10;currentLetter = 'A'&#10;oldLets = []&#10;nBackLets = []&#10;position=0&#10;correctAns=0&#10;nBack = 2&#10;print nBack&#10;#array of letters to sample from&#10;nBackLets = map(chr, range(65, 91))&#10;'''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="'''&#10;oldLets.append(currentLetter)&#10;nBackYesNo = 'N/A'&#10;if position-nBack &gt;= 0:&#10;    if currentLetter == oldLets[position-nBack]:&#10;        corAns = '1'&#10;        nBackYesNo = 'Yes'&#10;    else:&#10;        corAns = 'None'&#10;        nBackYesNo = 'No'&#10;'''&#10;#ns.send_event( 'lttr', label=&quot;Letter Presented&quot;, timestamp=egi.ms_localtime(), table = {'ltr-' : letters, 'nbk?' : nBackYesNo, 'time' : egi.ms_localtime()} ) &#10;ns.send_event( 'lttr', label=&quot;Letter Presented&quot;, timestamp=egi.ms_localtime(), table = {'ltr-' : letters, 'time' : egi.ms_localtime()} ) " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="'''&#10;nBackLoop.addData(&quot;nBack_Letter&quot;, currentLetter, nBackLoop.thisN)&#10;if currentLetter == oldLets[position-nBack]:&#10;    correctButton = '1'&#10;else:&#10;    correctButton = None&#10;&#10;if (key_resp_10.keys == correctButton):&#10;    evaluation = 'correct'&#10;    keyResp = key_resp_10.keys&#10;else:&#10;    evaluation = 'incorrect'&#10;    keyResp = 'None'&#10;&#10;ns.send_event( 'rsp-', label=&quot;Subject Response&quot;, timestamp=egi.ms_localtime(), table = {'resp': keyResp, 'eval': evaluation, 'time' : egi.ms_localtime()} ) &#10;&#10;position = position + 1&#10;'''&#10;ns.send_event( 'rsp-', label=&quot;Subject Response&quot;, timestamp=egi.ms_localtime(), table = {'resp': key_resp_10.keys, 'eval': '?', 'time' : egi.ms_localtime()} ) " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="key_resp_12">\u000a        <Param name="correctAns" val="'num_multiply'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_12" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="all keys" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <TextComponent name="Welcome">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="Welcome" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Welcome to the CTE Study&#10;&#10;Press any button when ready to continue" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="init">\u000a        <Param name="Begin Experiment" val="'''&#10;Total time to record MRI sequence:&#10;    Seconds: ~329.9789&#10;    Minutes: 5.4996483333333333333333333333333&#10;Expected time:&#10;    Seconds: 330&#10;    Minutes: 5.5&#10;'''&#10;&#10;import csv&#10;&#10;################################&#10;############## NS Initialization&#10;# &gt;&gt;&gt; import and initialization &gt;&gt;&gt; &#10;import egi.fake as egi&#10;ms_localtime = egi.ms_localtime     &#10;ns = egi.Netstation()&#10;ns.initialize('10.10.10.52', 55513)&#10;#ns.BeginSession()&#10;#ns.sync()&#10;############## NS Initialization&#10;################################&#10;&#10;correctButton = '1'&#10;########&#10;iRanWhat= 0&#10;continueRunning = True&#10;while continueRunning:&#10;    corAns = '0'&#10;    nBackLetter = 'A'&#10;    currentLetter = 'A'&#10;    oldLets = []&#10;    correctButton = []&#10;    nBackLets = []&#10;    position=0&#10;    correctAns= 0&#10;    nBack = 2&#10;    #array of letters to sample from&#10;    nBackLets = map(chr, range(65, 91))&#10;    counter = 0&#10;    howManyTimes = 100&#10;    while(position&lt;howManyTimes):&#10;       #pick random number from 1-100 for determining if this is an nBack round or not&#10;       bias = randint(1, 100)&#10;       currentLetter = nBackLets[randint(0,25)]&#10;       #check that enough rounds have passed to display an nBack&#10;       if position-nBack &gt;= 0:&#10;          #determine if next letter will be new or a nBack match, currently 50/50 odds&#10;          if bias &lt; 50:&#10;             currentLetter = oldLets[position-nBack]&#10;             corAns = '1'&#10;             counter += 1&#10;          else:&#10;             corAns = None&#10;       # update component parameters for each repeat&#10;       correctButton.append(corAns)&#10;       oldLets.append(currentLetter)&#10;       position = position + 1&#10;    iRanWhat += 1&#10;    if counter == (howManyTimes/2):&#10;        print &quot;nbacks = %d&quot; % counter&#10;        continueRunning = False&#10;        print oldLets&#10;        print correctButton&#10;        csvDictionary = {'letters': oldLets, 'correctButton':correctButton}&#10;        print csvDictionary&#10;&#10;with open('stimOrder.csv', 'wb') as outfile:&#10;    writer = csv.writer(outfile, delimiter = &quot;,&quot;)&#10;    writer.writerow(csvDictionary.keys())&#10;    writer.writerows(zip(*csvDictionary.values()))&#10;&#10;print &quot;It took %d runs to get this perfect set.&quot; % iRanWhat&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="init" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="nBack">\u000a      <KeyboardComponent name="key_resp_9">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_9" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="18" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="30" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'*'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="all keys" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="18" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="30" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="N-back Instructions.jpg" valType="str" updates="constant"/>\u000a        <Param name="size" val="[1.125, 1.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <CodeComponent name="NS_BeginTrials_instr">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_BeginTrials_instr" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.sync()&#10;ns.send_event( 'inst', label=&quot;Begin Instructions&quot;, timestamp=egi.ms_localtime(), table = {'time' : egi.ms_localtime()} ) &#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="MRI_sync">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Waiting for trigger pulse..." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_4">\u000a        <Param name="correctAns" val="'num_multiply'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_4" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply','8'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="NS_startRecording">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_startRecording" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.StartRecording()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="interrupt_overTR">\u000a      <TextComponent name="text_12">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_12" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Experimenter: if the functional scan is still running, wait for it to finish/cancel, then press SPACEBAR for next sync screen." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_14">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_14" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="AreYouSure_">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="After this point we won't stop the experiment, unless there is a problem.&#10;&#10;Are you sure you are ready? If so, press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_7">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_7" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="init_fix">\u000a      <TextComponent name="text_14">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_14" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_17">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_17" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="first_slide"/>\u000a    <Routine name="init_fix"/>\u000a    <Routine name="trial"/>\u000a    <Routine name="AreYouSure_"/>\u000a    <Routine name="MRI_sync"/>\u000a    <Routine name="nBack"/>\u000a    <LoopInitiator loopType="TrialHandler" name="nBackLoop">\u000a      <Param name="conditionsFile" val="stimOrder.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="nBackLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val=".1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'letters': u'F', 'correctButton': 0}, {'letters': u'I', 'correctButton': 0}, {'letters': u'F', 'correctButton': 1}, {'letters': u'W', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'W', 'correctButton': 1}, {'letters': u'Y', 'correctButton': 1}, {'letters': u'K', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'D', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 1}, {'letters': u'D', 'correctButton': 1}, {'letters': u'G', 'correctButton': 0}, {'letters': u'P', 'correctButton': 0}, {'letters': u'R', 'correctButton': 0}, {'letters': u'C', 'correctButton': 0}, {'letters': u'L', 'correctButton': 0}, {'letters': u'H', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'P', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 1}, {'letters': u'L', 'correctButton': 1}, {'letters': u'C', 'correctButton': 0}, {'letters': u'S', 'correctButton': 0}, {'letters': u'U', 'correctButton': 0}, {'letters': u'K', 'correctButton': 0}, {'letters': u'U', 'correctButton': 1}, {'letters': u'N', 'correctButton': 0}, {'letters': u'U', 'correctButton': 1}, {'letters': u'N', 'correctButton': 0}, {'letters': u'T', 'correctButton': 0}, {'letters': u'P', 'correctButton': 0}, {'letters': u'T', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'F', 'correctButton': 0}, {'letters': u'T', 'correctButton': 1}, {'letters': u'F', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'C', 'correctButton': 0}, {'letters': u'J', 'correctButton': 0}, {'letters': u'C', 'correctButton': 1}, {'letters': u'J', 'correctButton': 1}, {'letters': u'C', 'correctButton': 1}, {'letters': u'M', 'correctButton': 0}, {'letters': u'C', 'correctButton': 1}, {'letters': u'M', 'correctButton': 1}, {'letters': u'Q', 'correctButton': 0}, {'letters': u'X', 'correctButton': 0}, {'letters': u'Q', 'correctButton': 1}, {'letters': u'X', 'correctButton': 1}, {'letters': u'H', 'correctButton': 0}, {'letters': u'R', 'correctButton': 0}, {'letters': u'M', 'correctButton': 0}, {'letters': u'V', 'correctButton': 0}, {'letters': u'B', 'correctButton': 0}, {'letters': u'V', 'correctButton': 1}, {'letters': u'B', 'correctButton': 1}, {'letters': u'V', 'correctButton': 0}, {'letters': u'X', 'correctButton': 0}, {'letters': u'V', 'correctButton': 1}, {'letters': u'X', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'I', 'correctButton': 0}, {'letters': u'B', 'correctButton': 0}, {'letters': u'I', 'correctButton': 1}, {'letters': u'B', 'correctButton': 1}, {'letters': u'I', 'correctButton': 1}, {'letters': u'J', 'correctButton': 0}, {'letters': u'I', 'correctButton': 1}, {'letters': u'R', 'correctButton': 0}, {'letters': u'C', 'correctButton': 0}, {'letters': u'R', 'correctButton': 1}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'A', 'correctButton': 0}, {'letters': u'I', 'correctButton': 0}, {'letters': u'A', 'correctButton': 1}, {'letters': u'I', 'correctButton': 1}, {'letters': u'P', 'correctButton': 0}, {'letters': u'V', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'E', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'A', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'A', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="fixation"/>\u000a    <Routine name="trials_3"/>\u000a    <LoopTerminator name="nBackLoop"/>\u000a    <Routine name="interrupt_overTR"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p50
sS'thisTrial'
p51
g1
(cpsychopy.data
TrialType
p52
c__builtin__
dict
p53
(dp54
S'letters'
p55
VC
sS'correctButton'
p56
g37
(g38
(S'i4'
I0
I1
tRp57
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp58
stRp59
sS'_exp'
p60
I159070512
sg11
S'nBackLoop'
p61
sg6
g7
sS'thisRepN'
p62
I0
sg27
I01
sg28
g29
sS'data'
p63
g1
(cpsychopy.data
DataHandler
p64
g53
(dp65
S'ran'
p66
cnumpy.ma.core
_mareconstruct
p67
(cnumpy.ma.core
MaskedArray
p68
cnumpy
ndarray
p69
(I0
tp70
S'b'
tRp71
(I1
(I10
I1
tg38
(S'f4'
I0
I1
tRp72
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p73
g67
(g68
g69
g70
S'b'
tRp74
(I1
(I10
I1
tg72
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg26
cnumpy.core.multiarray
_reconstruct
p75
(g69
(I0
tS'b'
tRp76
(I1
(I10
I1
tg38
(S'O4'
I0
I1
tRp77
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp78
NaS'--'
p79
aS'--'
p80
aS'--'
p81
aS'--'
p82
aS'--'
p83
aS'--'
p84
aS'--'
p85
aS'--'
p86
aS'--'
p87
atbstRp88
(dp89
S'isNumeric'
p90
(dp91
g66
I01
sg73
I01
sg26
I00
ssS'trials'
p92
g47
sS'dataTypes'
p93
(lp94
g66
ag73
ag26
asS'dataShape'
p95
(lp96
I10
aI1
asbsS'method'
p97
S'sequential'
p98
sS'sequenceIndices'
p99
g75
(g69
(I0
tS'b'
tRp100
(I1
(I10
I1
tg57
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00'
tbsS'finished'
p101
I00
sS'nReps'
p102
I1
sS'nRemaining'
p103
I9
sS'trialList'
p104
(lp105
g59
ag1
(g52
g53
(dp106
g55
VR
sg56
g37
(g57
S'\x00\x00\x00\x00'
tRp107
stRp108
ag1
(g52
g53
(dp109
g55
VC
sg56
g37
(g57
S'\x01\x00\x00\x00'
tRp110
stRp111
ag1
(g52
g53
(dp112
g55
VR
sg56
g37
(g57
S'\x01\x00\x00\x00'
tRp113
stRp114
ag1
(g52
g53
(dp115
g55
VC
sg56
g37
(g57
S'\x01\x00\x00\x00'
tRp116
stRp117
ag1
(g52
g53
(dp118
g55
VS
sg56
g37
(g57
S'\xff\xff\xff\xff'
tRp119
stRp120
ag1
(g52
g53
(dp121
g55
VT
sg56
g37
(g57
S'\xff\xff\xff\xff'
tRp122
stRp123
ag1
(g52
g53
(dp124
g55
VS
sg56
g37
(g57
S'\x01\x00\x00\x00'
tRp125
stRp126
ag1
(g52
g53
(dp127
g55
VW
sg56
g37
(g57
S'\xff\xff\xff\xff'
tRp128
stRp129
ag1
(g52
g53
(dp130
g55
VS
sg56
g37
(g57
S'\x01\x00\x00\x00'
tRp131
stRp132
asS'seed'
p133
NsS'thisIndex'
p134
g37
(g57
S'\x00\x00\x00\x00'
tRp135
sS'thisN'
p136
I0
sS'thisTrialN'
p137
I0
sS'nTotal'
p138
I10
sS'_warnUseOfNext'
p139
I01
sbasS'saveWideText'
p140
I01
sS'thisEntry'
p141
(dp142
g26
NssS'version'
p143
S''
sS'_paramNamesSoFar'
p144
(lp145
sS'entries'
p146
(lp147
(dp148
g30
g31
sg32
g33
sg34
g35
sg36
g40
sg41
g12
sg16
F0.55916285514831543
sg42
g43
sg15
S'return'
p149
sa(dp150
g17
S'space'
p151
sg30
g31
sg32
g33
sg34
g35
sg36
g40
sg18
F1.5036089420318604
sg41
g12
sg42
g43
sa(dp152
g20
F0.36755990982055664
sg30
g31
sg32
g33
sg34
g35
sg36
g40
sg19
S'space'
p153
sg41
g12
sg42
g43
sa(dp154
g30
g31
sg22
F0.551483154296875
sg34
g35
sg36
g40
sg41
g12
sg21
S'space'
p155
sg32
g33
sg42
g43
sa(dp156
g24
F1.1030869483947754
sg23
S'num_multiply'
p157
sg32
g33
sg34
g35
sg36
g40
sg41
g12
sg42
g43
sg30
g31
sa(dp158
g41
g12
sg30
g31
sg42
g43
sg32
g33
sg34
g35
sg36
g40
sg25
NsasS'loops'
p159
(lp160
g47
asS'savePickle'
p161
I01
sb.