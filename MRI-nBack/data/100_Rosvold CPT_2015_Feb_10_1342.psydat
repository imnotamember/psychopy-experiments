ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/dbl-a/psychopy-experiments/MRI-nBack/MRI-nBack.psyexp
p7
sS'dataFileName'
p8
V/Users/dbl-a/psychopy-experiments/MRI-nBack/data/100_Rosvold CPT_2015_Feb_10_1342
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'Rosvold CPT'
p12
sS'dataNames'
p13
(lp14
S'key_resp_18.keys'
p15
aS'key_resp_18.rt'
p16
aS'key_resp_17.keys'
p17
aS'key_resp_17.rt'
p18
aS'key_resp_2.keys'
p19
aS'key_resp_2.rt'
p20
aS'key_resp_7.keys'
p21
aS'key_resp_7.rt'
p22
aS'key_resp_4.keys'
p23
aS'key_resp_4.rt'
p24
aS'key_resp_9.keys'
p25
aS'key_resp_11.keys'
p26
aS'key_resp_10.keys'
p27
aS'key_resp_10.corr'
p28
aS'key_resp_10.rt'
p29
aS'key_resp_12.keys'
p30
aS'key_resp_14.keys'
p31
aS'key_resp_14.rt'
p32
asS'autoLog'
p33
I01
sS'extraInfo'
p34
(dp35
Vparticipant
p36
V100
p37
sVGender
p38
Vfemale
p39
sVHandedness
p40
VRight
p41
sS'frameRate'
p42
cnumpy.core.multiarray
scalar
p43
(cnumpy
dtype
p44
(S'f8'
I0
I1
tRp45
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x8bv\xb2\x85\x10\xeaM@'
tRp46
sS'expName'
p47
g12
sS'date'
p48
V2015_Feb_10_1342
p49
ssS'loopsUnfinished'
p50
(lp51
sS'saveWideText'
p52
I01
sS'thisEntry'
p53
(dp54
sS'version'
p55
S''
sS'_paramNamesSoFar'
p56
(lp57
S'letters'
p58
aS'correctButton'
p59
asS'entries'
p60
(lp61
(dp62
g36
g37
sg38
g39
sg40
g41
sg42
g46
sg47
g12
sg16
F2.1971890926361084
sg48
g49
sg15
S'space'
p63
sa(dp64
g17
S'space'
p65
sg36
g37
sg38
g39
sg40
g41
sg42
g46
sg18
F1.103071928024292
sg47
g12
sg48
g49
sa(dp66
g20
F0.33411216735839844
sg36
g37
sg38
g39
sg40
g41
sg42
g46
sg19
S'num_multiply'
p67
sg47
g12
sg48
g49
sa(dp68
g36
g37
sg22
F0.2842719554901123
sg40
g41
sg42
g46
sg47
g12
sg21
S'num_multiply'
p69
sg38
g39
sg48
g49
sa(dp70
g24
F0.30063509941101074
sg23
S'num_multiply'
p71
sg38
g39
sg40
g41
sg42
g46
sg47
g12
sg48
g49
sg36
g37
sa(dp72
g47
g12
sg36
g37
sg48
g49
sg38
g39
sg40
g41
sg42
g46
sg25
Nsa(dp73
S'nBackLoop.thisIndex'
p74
g43
(g44
(S'i4'
I0
I1
tRp75
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp76
sg28
I0
sg40
g41
sg58
VJ
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p77
I0
sg59
g43
(g75
S'\x00\x00\x00\x00'
tRp78
sg29
F0.7629849910736084
sS'nBackLoop.thisN'
p79
I0
sg42
g46
sS'nBackLoop.thisTrialN'
p80
I0
sg48
g49
sg36
g37
sg30
Nsg27
S'1'
sg47
g12
sa(dp81
S'nBackLoop.thisIndex'
p82
g43
(g75
S'\x01\x00\x00\x00'
tRp83
sg28
I0
sg40
g41
sg58
VK
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p84
I0
sg59
g43
(g75
S'\x00\x00\x00\x00'
tRp85
sg29
F0.69593405723571777
sS'nBackLoop.thisN'
p86
I1
sg42
g46
sS'nBackLoop.thisTrialN'
p87
I1
sg48
g49
sg36
g37
sg30
Nsg27
S'1'
sg47
g12
sa(dp88
S'nBackLoop.thisIndex'
p89
g43
(g75
S'\x02\x00\x00\x00'
tRp90
sg28
I0
sg40
g41
sg58
VV
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p91
I0
sg59
g43
(g75
S'\xff\xff\xff\xff'
tRp92
sg29
F0.79655599594116211
sS'nBackLoop.thisN'
p93
I2
sg42
g46
sS'nBackLoop.thisTrialN'
p94
I2
sg48
g49
sg36
g37
sg30
Nsg27
S'1'
sg47
g12
sa(dp95
S'nBackLoop.thisIndex'
p96
g43
(g75
S'\x03\x00\x00\x00'
tRp97
sg28
I1
sg40
g41
sg58
VK
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p98
I0
sg59
g43
(g75
S'\x01\x00\x00\x00'
tRp99
sg29
F0.94838190078735352
sS'nBackLoop.thisN'
p100
I3
sg42
g46
sS'nBackLoop.thisTrialN'
p101
I3
sg48
g49
sg36
g37
sg30
Nsg27
S'1'
sg47
g12
sa(dp102
S'nBackLoop.thisIndex'
p103
g43
(g75
S'\x04\x00\x00\x00'
tRp104
sg28
I0
sg40
g41
sg58
VO
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p105
I0
sg59
g43
(g75
S'\xff\xff\xff\xff'
tRp106
sg29
F0.26169013977050781
sS'nBackLoop.thisN'
p107
I4
sg42
g46
sS'nBackLoop.thisTrialN'
p108
I4
sg48
g49
sg36
g37
sg30
Nsg27
S'1'
sg47
g12
sa(dp109
S'nBackLoop.thisIndex'
p110
g43
(g75
S'\x05\x00\x00\x00'
tRp111
sg28
I0
sg40
g41
sg58
VK
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p112
I0
sg59
g43
(g75
S'\x01\x00\x00\x00'
tRp113
sg42
g46
sS'nBackLoop.thisN'
p114
I5
sS'nBackLoop.thisTrialN'
p115
I5
sg48
g49
sg36
g37
sg30
Nsg27
Nsg47
g12
sa(dp116
S'nBackLoop.thisIndex'
p117
g43
(g75
S'\x06\x00\x00\x00'
tRp118
sg28
I0
sg40
g41
sg58
VO
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p119
I0
sg59
g43
(g75
S'\x01\x00\x00\x00'
tRp120
sg42
g46
sS'nBackLoop.thisN'
p121
I6
sS'nBackLoop.thisTrialN'
p122
I6
sg48
g49
sg36
g37
sg30
Nsg27
Nsg47
g12
sa(dp123
S'nBackLoop.thisIndex'
p124
g43
(g75
S'\x07\x00\x00\x00'
tRp125
sg28
I0
sg40
g41
sg58
VM
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p126
I0
sg59
g43
(g75
S'\xff\xff\xff\xff'
tRp127
sg42
g46
sS'nBackLoop.thisN'
p128
I7
sS'nBackLoop.thisTrialN'
p129
I7
sg48
g49
sg36
g37
sg30
Nsg27
Nsg47
g12
sa(dp130
S'nBackLoop.thisIndex'
p131
g43
(g75
S'\x08\x00\x00\x00'
tRp132
sg28
I0
sg40
g41
sg58
VO
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p133
I0
sg59
g43
(g75
S'\x01\x00\x00\x00'
tRp134
sg42
g46
sS'nBackLoop.thisN'
p135
I8
sS'nBackLoop.thisTrialN'
p136
I8
sg48
g49
sg36
g37
sg30
Nsg27
Nsg47
g12
sa(dp137
S'nBackLoop.thisIndex'
p138
g43
(g75
S'\t\x00\x00\x00'
tRp139
sg28
I0
sg40
g41
sg58
VM
sg26
Nsg38
g39
sS'nBackLoop.thisRepN'
p140
I0
sg59
g43
(g75
S'\x01\x00\x00\x00'
tRp141
sg42
g46
sS'nBackLoop.thisN'
p142
I9
sS'nBackLoop.thisTrialN'
p143
I9
sg48
g49
sg36
g37
sg30
Nsg27
Nsg47
g12
sa(dp144
g36
g37
sg31
S'space'
p145
sg38
g39
sg40
g41
sg42
g46
sg32
F8.6314258575439453
sg47
g12
sg48
g49
sasS'loops'
p146
(lp147
g1
(cpsychopy.data
TrialHandler
p148
g3
NtRp149
(dp150
S'origin'
p151
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1920, 1080]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'Gender': u'female', u'Handedness': u'Right', u'participant': u'100'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="Rosvold CPT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="debug" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="end">\u000a      <TextComponent name="text_9">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_9" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Thank you, the study is complete. Please wait patiently for the technician to assist you out of the MRI." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="20" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="NS_stopRecording">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_stopRecording" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.StopRecording()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="first_slide">\u000a      <TextComponent name="text_15">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_15" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A fixation will be placed onscreen during your preliminary scans/set up.&#10;&#10;Press Space Bar to continue when your participant is ready for the experiment.&#10;&#10;Press Space Bar to go to the fixation screen now." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_18">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_18" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="fixation">\u000a      <TextComponent name="text_7">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_7" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="120" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="2" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="nBack_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="nBack_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.sync()&#10;&#10;#pick random number from 1-100 for determining if this is an nBack round or not&#10;bias = randint(1, 100)&#10;print 'Bias:'&#10;print bias&#10;currentLetter = nBackLets[randint(0,25)]&#10;print currentLetter&#10;#check that enough rounds have passed to display an nBack&#10;if position-nBack &gt;= 0:&#10;    #determine if next letter will be new or a nBack match, currently 50/50 odds&#10;    if bias &lt; 50:&#10;        currentLetter = oldLets[position-nBack]&#10;        print &quot;nbacked&quot;&#10;        print currentLetter&#10;        corAns = '1'&#10;    else:&#10;        corAns = 'None'&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="key_resp_11">\u000a        <Param name="correctAns" val="'num_multiply','8'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_11" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="120" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="1" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="1" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply','8'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="59" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trials_3">\u000a      <TextComponent name="text_8">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_8" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$letters" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".5" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_10">\u000a        <Param name="correctAns" val="$correctButton" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_10" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="'''&#10;corAns = ''&#10;nBackLetter = 'A'&#10;currentLetter = 'A'&#10;oldLets = []&#10;nBackLets = []&#10;position=0&#10;correctAns=0&#10;nBack = 2&#10;print nBack&#10;#array of letters to sample from&#10;nBackLets = map(chr, range(65, 91))&#10;'''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="'''&#10;oldLets.append(currentLetter)&#10;nBackYesNo = 'N/A'&#10;if position-nBack &gt;= 0:&#10;    if currentLetter == oldLets[position-nBack]:&#10;        corAns = '1'&#10;        nBackYesNo = 'Yes'&#10;    else:&#10;        corAns = 'None'&#10;        nBackYesNo = 'No'&#10;'''&#10;#ns.send_event( 'lttr', label=&quot;Letter Presented&quot;, timestamp=egi.ms_localtime(), table = {'ltr-' : letters, 'nbk?' : nBackYesNo, 'time' : egi.ms_localtime()} ) &#10;ns.send_event( 'lttr', label=&quot;Letter Presented&quot;, timestamp=egi.ms_localtime(), table = {'ltr-' : letters, 'time' : egi.ms_localtime()} ) " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="'''&#10;nBackLoop.addData(&quot;nBack_Letter&quot;, currentLetter, nBackLoop.thisN)&#10;if currentLetter == oldLets[position-nBack]:&#10;    correctButton = '1'&#10;else:&#10;    correctButton = None&#10;&#10;if (key_resp_10.keys == correctButton):&#10;    evaluation = 'correct'&#10;    keyResp = key_resp_10.keys&#10;else:&#10;    evaluation = 'incorrect'&#10;    keyResp = 'None'&#10;&#10;ns.send_event( 'rsp-', label=&quot;Subject Response&quot;, timestamp=egi.ms_localtime(), table = {'resp': keyResp, 'eval': evaluation, 'time' : egi.ms_localtime()} ) &#10;&#10;position = position + 1&#10;'''&#10;ns.send_event( 'rsp-', label=&quot;Subject Response&quot;, timestamp=egi.ms_localtime(), table = {'resp': key_resp_10.keys, 'eval': '?', 'time' : egi.ms_localtime()} ) " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="key_resp_12">\u000a        <Param name="correctAns" val="'num_multiply'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_12" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="all keys" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <TextComponent name="Welcome">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="Welcome" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Welcome to the CTE Study&#10;&#10;Press any button when ready to continue" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="init">\u000a        <Param name="Begin Experiment" val="'''&#10;Total time to record MRI sequence:&#10;    Seconds: ~329.9789&#10;    Minutes: 5.4996483333333333333333333333333&#10;Expected time:&#10;    Seconds: 330&#10;    Minutes: 5.5&#10;'''&#10;&#10;import csv&#10;&#10;################################&#10;############## NS Initialization&#10;# &gt;&gt;&gt; import and initialization &gt;&gt;&gt; &#10;import egi.fake as egi&#10;ms_localtime = egi.ms_localtime     &#10;ns = egi.Netstation()&#10;ns.initialize('10.10.10.52', 55513)&#10;#ns.BeginSession()&#10;#ns.sync()&#10;############## NS Initialization&#10;################################&#10;&#10;correctButton = '1'&#10;########&#10;iRanWhat= 0&#10;continueRunning = True&#10;while continueRunning:&#10;    corAns = '0'&#10;    nBackLetter = 'A'&#10;    currentLetter = 'A'&#10;    oldLets = []&#10;    correctButton = []&#10;    nBackLets = []&#10;    position=0&#10;    correctAns= 0&#10;    nBack = 2&#10;    #array of letters to sample from&#10;    nBackLets = map(chr, range(65, 91))&#10;    counter = 0&#10;    howManyTimes = 100&#10;    while(position&lt;howManyTimes):&#10;       #pick random number from 1-100 for determining if this is an nBack round or not&#10;       bias = randint(1, 100)&#10;       currentLetter = nBackLets[randint(0,25)]&#10;       #check that enough rounds have passed to display an nBack&#10;       if position-nBack &gt;= 0:&#10;          #determine if next letter will be new or a nBack match, currently 50/50 odds&#10;          if bias &lt; 50:&#10;             currentLetter = oldLets[position-nBack]&#10;             corAns = '1'&#10;             counter += 1&#10;          else:&#10;             corAns = None&#10;       # update component parameters for each repeat&#10;       correctButton.append(corAns)&#10;       oldLets.append(currentLetter)&#10;       position = position + 1&#10;    iRanWhat += 1&#10;    if counter == (howManyTimes/2):&#10;        print &quot;nbacks = %d&quot; % counter&#10;        continueRunning = False&#10;        print oldLets&#10;        print correctButton&#10;        csvDictionary = {'letters': oldLets, 'correctButton':correctButton}&#10;        print csvDictionary&#10;&#10;with open('stimOrder.csv', 'wb') as outfile:&#10;    writer = csv.writer(outfile, delimiter = &quot;,&quot;)&#10;    writer.writerow(csvDictionary.keys())&#10;    writer.writerows(zip(*csvDictionary.values()))&#10;&#10;print &quot;It took %d runs to get this perfect set.&quot; % iRanWhat&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="init" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="nBack">\u000a      <KeyboardComponent name="key_resp_9">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_9" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="18" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="30" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'*'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="all keys" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="18" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="30" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="N-back Instructions.jpg" valType="str" updates="constant"/>\u000a        <Param name="size" val="[1.125, 1.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <CodeComponent name="NS_BeginTrials_instr">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_BeginTrials_instr" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.sync()&#10;ns.send_event( 'inst', label=&quot;Begin Instructions&quot;, timestamp=egi.ms_localtime(), table = {'time' : egi.ms_localtime()} ) &#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="MRI_sync">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Waiting for trigger pulse..." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_4">\u000a        <Param name="correctAns" val="'num_multiply'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_4" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply','8'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="NS_startRecording">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_startRecording" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.StartRecording()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="interrupt_overTR">\u000a      <TextComponent name="text_12">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_12" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Experimenter: if the functional scan is still running, wait for it to finish/cancel, then press SPACEBAR for next sync screen." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_14">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_14" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="AreYouSure_">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="After this point we won't stop the experiment, unless there is a problem.&#10;&#10;Are you sure you are ready? If so, press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_7">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_7" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="init_fix">\u000a      <TextComponent name="text_14">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_14" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_17">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_17" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="first_slide"/>\u000a    <Routine name="init_fix"/>\u000a    <Routine name="trial"/>\u000a    <Routine name="AreYouSure_"/>\u000a    <Routine name="MRI_sync"/>\u000a    <Routine name="nBack"/>\u000a    <LoopInitiator loopType="TrialHandler" name="nBackLoop">\u000a      <Param name="conditionsFile" val="stimOrder.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="nBackLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val=".1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'letters': u'F', 'correctButton': 0}, {'letters': u'I', 'correctButton': 0}, {'letters': u'F', 'correctButton': 1}, {'letters': u'W', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'W', 'correctButton': 1}, {'letters': u'Y', 'correctButton': 1}, {'letters': u'K', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'D', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 1}, {'letters': u'D', 'correctButton': 1}, {'letters': u'G', 'correctButton': 0}, {'letters': u'P', 'correctButton': 0}, {'letters': u'R', 'correctButton': 0}, {'letters': u'C', 'correctButton': 0}, {'letters': u'L', 'correctButton': 0}, {'letters': u'H', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'P', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 1}, {'letters': u'L', 'correctButton': 1}, {'letters': u'C', 'correctButton': 0}, {'letters': u'S', 'correctButton': 0}, {'letters': u'U', 'correctButton': 0}, {'letters': u'K', 'correctButton': 0}, {'letters': u'U', 'correctButton': 1}, {'letters': u'N', 'correctButton': 0}, {'letters': u'U', 'correctButton': 1}, {'letters': u'N', 'correctButton': 0}, {'letters': u'T', 'correctButton': 0}, {'letters': u'P', 'correctButton': 0}, {'letters': u'T', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'F', 'correctButton': 0}, {'letters': u'T', 'correctButton': 1}, {'letters': u'F', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'C', 'correctButton': 0}, {'letters': u'J', 'correctButton': 0}, {'letters': u'C', 'correctButton': 1}, {'letters': u'J', 'correctButton': 1}, {'letters': u'C', 'correctButton': 1}, {'letters': u'M', 'correctButton': 0}, {'letters': u'C', 'correctButton': 1}, {'letters': u'M', 'correctButton': 1}, {'letters': u'Q', 'correctButton': 0}, {'letters': u'X', 'correctButton': 0}, {'letters': u'Q', 'correctButton': 1}, {'letters': u'X', 'correctButton': 1}, {'letters': u'H', 'correctButton': 0}, {'letters': u'R', 'correctButton': 0}, {'letters': u'M', 'correctButton': 0}, {'letters': u'V', 'correctButton': 0}, {'letters': u'B', 'correctButton': 0}, {'letters': u'V', 'correctButton': 1}, {'letters': u'B', 'correctButton': 1}, {'letters': u'V', 'correctButton': 0}, {'letters': u'X', 'correctButton': 0}, {'letters': u'V', 'correctButton': 1}, {'letters': u'X', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'I', 'correctButton': 0}, {'letters': u'B', 'correctButton': 0}, {'letters': u'I', 'correctButton': 1}, {'letters': u'B', 'correctButton': 1}, {'letters': u'I', 'correctButton': 1}, {'letters': u'J', 'correctButton': 0}, {'letters': u'I', 'correctButton': 1}, {'letters': u'R', 'correctButton': 0}, {'letters': u'C', 'correctButton': 0}, {'letters': u'R', 'correctButton': 1}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'A', 'correctButton': 0}, {'letters': u'I', 'correctButton': 0}, {'letters': u'A', 'correctButton': 1}, {'letters': u'I', 'correctButton': 1}, {'letters': u'P', 'correctButton': 0}, {'letters': u'V', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'E', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'A', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'A', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="fixation"/>\u000a    <Routine name="trials_3"/>\u000a    <LoopTerminator name="nBackLoop"/>\u000a    <Routine name="interrupt_overTR"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p152
sS'thisTrial'
p153
(lp154
sS'_exp'
p155
I159070512
sg11
S'nBackLoop'
p156
sg6
g7
sS'thisRepN'
p157
I1
sg33
I01
sg34
g35
sS'data'
p158
g1
(cpsychopy.data
DataHandler
p159
c__builtin__
dict
p160
(dp161
g28
cnumpy.ma.core
_mareconstruct
p162
(cnumpy.ma.core
MaskedArray
p163
cnumpy
ndarray
p164
(I0
tp165
S'b'
tRp166
(I1
(I10
I1
tg44
(S'f4'
I0
I1
tRp167
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg26
cnumpy.core.multiarray
_reconstruct
p168
(g164
(I0
tS'b'
tRp169
(I1
(I10
I1
tg44
(S'O4'
I0
I1
tRp170
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp171
NaNaNaNaNaNaNaNaNaNatbsS'ran'
p172
g162
(g163
g164
g165
S'b'
tRp173
(I1
(I10
I1
tg167
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg27
g168
(g164
(I0
tS'b'
tRp174
(I1
(I10
I1
tg170
I00
(lp175
S'1'
aS'1'
aS'1'
aS'1'
aS'1'
aNaNaNaNaNatbsg30
g168
(g164
(I0
tS'b'
tRp176
(I1
(I10
I1
tg170
I00
(lp177
NaNaNaNaNaNaNaNaNaNatbsg29
g162
(g163
g164
g165
S'b'
tRp178
(I1
(I10
I1
tg167
I00
S'\xfcRC?\xbc(2?\x18\xebK?(\xc9r?@\xfc\x85>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01'
NtbsS'order'
p179
g162
(g163
g164
g165
S'b'
tRp180
(I1
(I10
I1
tg167
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp181
(dp182
S'isNumeric'
p183
(dp184
g28
I01
sg26
I00
sg172
I01
sg29
I01
sg30
I00
sg27
I00
sg179
I01
ssS'trials'
p185
g149
sS'dataTypes'
p186
(lp187
g172
ag179
ag26
ag27
ag28
ag29
ag30
asS'dataShape'
p188
(lp189
I10
aI1
asbsS'method'
p190
S'sequential'
p191
sS'sequenceIndices'
p192
g168
(g164
(I0
tS'b'
tRp193
(I1
(I10
I1
tg75
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00'
tbsS'finished'
p194
I01
sS'nReps'
p195
I1
sS'nRemaining'
p196
I-1
sS'trialList'
p197
(lp198
g1
(cpsychopy.data
TrialType
p199
g160
(dp200
g58
VJ
sg59
g78
stRp201
ag1
(g199
g160
(dp202
g58
VK
sg59
g85
stRp203
ag1
(g199
g160
(dp204
g58
VV
sg59
g92
stRp205
ag1
(g199
g160
(dp206
g58
VK
sg59
g99
stRp207
ag1
(g199
g160
(dp208
g58
VO
sg59
g106
stRp209
ag1
(g199
g160
(dp210
g58
VK
sg59
g113
stRp211
ag1
(g199
g160
(dp212
g58
VO
sg59
g120
stRp213
ag1
(g199
g160
(dp214
g58
VM
sg59
g127
stRp215
ag1
(g199
g160
(dp216
g58
VO
sg59
g134
stRp217
ag1
(g199
g160
(dp218
g58
VM
sg59
g141
stRp219
asS'seed'
p220
NsS'thisIndex'
p221
g139
sS'thisN'
p222
I10
sS'thisTrialN'
p223
I0
sS'nTotal'
p224
I10
sS'_warnUseOfNext'
p225
I01
sbasS'savePickle'
p226
I01
sb.