ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/dbl-a/psychopy-experiments/MRI-nBack/MRI-nBack.psyexp
p7
sS'dataFileName'
p8
V/Users/dbl-a/psychopy-experiments/MRI-nBack/data/100_Rosvold CPT_2015_Feb_10_1341
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'Rosvold CPT'
p12
sS'dataNames'
p13
(lp14
S'key_resp_18.keys'
p15
aS'key_resp_18.rt'
p16
aS'key_resp_17.keys'
p17
aS'key_resp_17.rt'
p18
aS'key_resp_2.keys'
p19
aS'key_resp_2.rt'
p20
aS'key_resp_7.keys'
p21
aS'key_resp_7.rt'
p22
aS'key_resp_4.keys'
p23
aS'key_resp_4.rt'
p24
aS'key_resp_9.keys'
p25
asS'autoLog'
p26
I01
sS'extraInfo'
p27
(dp28
Vparticipant
p29
V100
p30
sVGender
p31
Vfemale
p32
sVHandedness
p33
VRight
p34
sS'frameRate'
p35
cnumpy.core.multiarray
scalar
p36
(cnumpy
dtype
p37
(S'f8'
I0
I1
tRp38
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xc8vz\xe04\xeaM@'
tRp39
sS'expName'
p40
g12
sS'date'
p41
V2015_Feb_10_1341
p42
ssS'loopsUnfinished'
p43
(lp44
sS'saveWideText'
p45
I01
sS'thisEntry'
p46
(dp47
sS'version'
p48
S''
sS'_paramNamesSoFar'
p49
(lp50
sS'entries'
p51
(lp52
(dp53
g29
g30
sg31
g32
sg33
g34
sg35
g39
sg40
g12
sg16
F0.38466000556945801
sg41
g42
sg15
S'space'
p54
sa(dp55
g17
S'space'
p56
sg29
g30
sg31
g32
sg33
g34
sg35
g39
sg18
F0.93533205986022949
sg40
g12
sg41
g42
sa(dp57
g20
F0.50129199028015137
sg29
g30
sg31
g32
sg33
g34
sg35
g39
sg19
S'space'
p58
sg40
g12
sg41
g42
sa(dp59
g29
g30
sg22
F0.46789193153381348
sg33
g34
sg35
g39
sg40
g12
sg21
S'space'
p60
sg31
g32
sg41
g42
sa(dp61
g24
F0.35099411010742188
sg23
S'num_multiply'
p62
sg31
g32
sg33
g34
sg35
g39
sg40
g12
sg41
g42
sg29
g30
sa(dp63
g40
g12
sg29
g30
sg41
g42
sg31
g32
sg33
g34
sg35
g39
sg25
NsasS'loops'
p64
(lp65
g1
(cpsychopy.data
TrialHandler
p66
g3
NtRp67
(dp68
S'origin'
p69
V<PsychoPy2experiment version="1.81.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1920, 1080]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'Gender': u'female', u'Handedness': u'Right', u'participant': u'100'}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="Rosvold CPT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="debug" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="end">\u000a      <TextComponent name="text_9">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_9" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Thank you, the study is complete. Please wait patiently for the technician to assist you out of the MRI." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="20" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="NS_stopRecording">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_stopRecording" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.StopRecording()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="first_slide">\u000a      <TextComponent name="text_15">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_15" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="A fixation will be placed onscreen during your preliminary scans/set up.&#10;&#10;Press Space Bar to continue when your participant is ready for the experiment.&#10;&#10;Press Space Bar to go to the fixation screen now." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_18">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_18" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="fixation">\u000a      <TextComponent name="text_7">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_7" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="120" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="2" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="nBack_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="nBack_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.sync()&#10;&#10;#pick random number from 1-100 for determining if this is an nBack round or not&#10;bias = randint(1, 100)&#10;print 'Bias:'&#10;print bias&#10;currentLetter = nBackLets[randint(0,25)]&#10;print currentLetter&#10;#check that enough rounds have passed to display an nBack&#10;if position-nBack &gt;= 0:&#10;    #determine if next letter will be new or a nBack match, currently 50/50 odds&#10;    if bias &lt; 50:&#10;        currentLetter = oldLets[position-nBack]&#10;        print &quot;nbacked&quot;&#10;        print currentLetter&#10;        corAns = '1'&#10;    else:&#10;        corAns = 'None'&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="key_resp_11">\u000a        <Param name="correctAns" val="'num_multiply','8'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_11" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="120" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="1" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="1" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply','8'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="59" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trials_3">\u000a      <TextComponent name="text_8">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_8" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$letters" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val=".5" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_10">\u000a        <Param name="correctAns" val="$correctButton" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_10" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="code_4">\u000a        <Param name="Begin Experiment" val="'''&#10;corAns = ''&#10;nBackLetter = 'A'&#10;currentLetter = 'A'&#10;oldLets = []&#10;nBackLets = []&#10;position=0&#10;correctAns=0&#10;nBack = 2&#10;print nBack&#10;#array of letters to sample from&#10;nBackLets = map(chr, range(65, 91))&#10;'''" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="code_4" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="'''&#10;oldLets.append(currentLetter)&#10;nBackYesNo = 'N/A'&#10;if position-nBack &gt;= 0:&#10;    if currentLetter == oldLets[position-nBack]:&#10;        corAns = '1'&#10;        nBackYesNo = 'Yes'&#10;    else:&#10;        corAns = 'None'&#10;        nBackYesNo = 'No'&#10;'''&#10;#ns.send_event( 'lttr', label=&quot;Letter Presented&quot;, timestamp=egi.ms_localtime(), table = {'ltr-' : letters, 'nbk?' : nBackYesNo, 'time' : egi.ms_localtime()} ) &#10;ns.send_event( 'lttr', label=&quot;Letter Presented&quot;, timestamp=egi.ms_localtime(), table = {'ltr-' : letters, 'time' : egi.ms_localtime()} ) " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="'''&#10;nBackLoop.addData(&quot;nBack_Letter&quot;, currentLetter, nBackLoop.thisN)&#10;if currentLetter == oldLets[position-nBack]:&#10;    correctButton = '1'&#10;else:&#10;    correctButton = None&#10;&#10;if (key_resp_10.keys == correctButton):&#10;    evaluation = 'correct'&#10;    keyResp = key_resp_10.keys&#10;else:&#10;    evaluation = 'incorrect'&#10;    keyResp = 'None'&#10;&#10;ns.send_event( 'rsp-', label=&quot;Subject Response&quot;, timestamp=egi.ms_localtime(), table = {'resp': keyResp, 'eval': evaluation, 'time' : egi.ms_localtime()} ) &#10;&#10;position = position + 1&#10;'''&#10;ns.send_event( 'rsp-', label=&quot;Subject Response&quot;, timestamp=egi.ms_localtime(), table = {'resp': key_resp_10.keys, 'eval': '?', 'time' : egi.ms_localtime()} ) " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="key_resp_12">\u000a        <Param name="correctAns" val="'num_multiply'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_12" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="60" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val=".985" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="all keys" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trial">\u000a      <TextComponent name="Welcome">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="Welcome" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Welcome to the CTE Study&#10;&#10;Press any button when ready to continue" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="init">\u000a        <Param name="Begin Experiment" val="'''&#10;Total time to record MRI sequence:&#10;    Seconds: ~329.9789&#10;    Minutes: 5.4996483333333333333333333333333&#10;Expected time:&#10;    Seconds: 330&#10;    Minutes: 5.5&#10;'''&#10;&#10;import csv&#10;&#10;################################&#10;############## NS Initialization&#10;# &gt;&gt;&gt; import and initialization &gt;&gt;&gt; &#10;import egi.fake as egi&#10;ms_localtime = egi.ms_localtime     &#10;ns = egi.Netstation()&#10;ns.initialize('10.10.10.52', 55513)&#10;#ns.BeginSession()&#10;#ns.sync()&#10;############## NS Initialization&#10;################################&#10;&#10;correctButton = '1'&#10;########&#10;iRanWhat= 0&#10;continueRunning = True&#10;while continueRunning:&#10;    corAns = '0'&#10;    nBackLetter = 'A'&#10;    currentLetter = 'A'&#10;    oldLets = []&#10;    correctButton = []&#10;    nBackLets = []&#10;    position=0&#10;    correctAns= 0&#10;    nBack = 2&#10;    #array of letters to sample from&#10;    nBackLets = map(chr, range(65, 91))&#10;    counter = 0&#10;    howManyTimes = 100&#10;    while(position&lt;howManyTimes):&#10;       #pick random number from 1-100 for determining if this is an nBack round or not&#10;       bias = randint(1, 100)&#10;       currentLetter = nBackLets[randint(0,25)]&#10;       #check that enough rounds have passed to display an nBack&#10;       if position-nBack &gt;= 0:&#10;          #determine if next letter will be new or a nBack match, currently 50/50 odds&#10;          if bias &lt; 50:&#10;             currentLetter = oldLets[position-nBack]&#10;             corAns = '1'&#10;             counter += 1&#10;          else:&#10;             corAns = None&#10;       # update component parameters for each repeat&#10;       correctButton.append(corAns)&#10;       oldLets.append(currentLetter)&#10;       position = position + 1&#10;    iRanWhat += 1&#10;    if counter == (howManyTimes/2):&#10;        print &quot;nbacks = %d&quot; % counter&#10;        continueRunning = False&#10;        print oldLets&#10;        print correctButton&#10;        csvDictionary = {'letters': oldLets, 'correctButton':correctButton}&#10;        print csvDictionary&#10;&#10;with open('stimOrder.csv', 'wb') as outfile:&#10;    writer = csv.writer(outfile, delimiter = &quot;,&quot;)&#10;    writer.writerow(csvDictionary.keys())&#10;    writer.writerows(zip(*csvDictionary.values()))&#10;&#10;print &quot;It took %d runs to get this perfect set.&quot; % iRanWhat&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="init" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="nBack">\u000a      <KeyboardComponent name="key_resp_9">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_9" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="18" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="30" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'*'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="all keys" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <ImageComponent name="image">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="image" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="18" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="30" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="0" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="frame N" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="N-back Instructions.jpg" valType="str" updates="constant"/>\u000a        <Param name="size" val="[1.125, 1.5]" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <CodeComponent name="NS_BeginTrials_instr">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_BeginTrials_instr" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.sync()&#10;ns.send_event( 'inst', label=&quot;Begin Instructions&quot;, timestamp=egi.ms_localtime(), table = {'time' : egi.ms_localtime()} ) &#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="MRI_sync">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Waiting for trigger pulse..." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_4">\u000a        <Param name="correctAns" val="'num_multiply'" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_4" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'num_multiply','8'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="NS_startRecording">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="NS_startRecording" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="ns.StartRecording()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="interrupt_overTR">\u000a      <TextComponent name="text_12">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_12" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Experimenter: if the functional scan is still running, wait for it to finish/cancel, then press SPACEBAR for next sync screen." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_14">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_14" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="AreYouSure_">\u000a      <TextComponent name="text_6">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_6" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="After this point we won't stop the experiment, unless there is a problem.&#10;&#10;Are you sure you are ready? If so, press any key." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_7">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_7" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="init_fix">\u000a      <TextComponent name="text_14">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_14" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_17">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_17" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="first_slide"/>\u000a    <Routine name="init_fix"/>\u000a    <Routine name="trial"/>\u000a    <Routine name="AreYouSure_"/>\u000a    <Routine name="MRI_sync"/>\u000a    <Routine name="nBack"/>\u000a    <LoopInitiator loopType="TrialHandler" name="nBackLoop">\u000a      <Param name="conditionsFile" val="stimOrder.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="nBackLoop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val=".1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'letters': u'F', 'correctButton': 0}, {'letters': u'I', 'correctButton': 0}, {'letters': u'F', 'correctButton': 1}, {'letters': u'W', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'W', 'correctButton': 1}, {'letters': u'Y', 'correctButton': 1}, {'letters': u'K', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'D', 'correctButton': 0}, {'letters': u'Y', 'correctButton': 1}, {'letters': u'D', 'correctButton': 1}, {'letters': u'G', 'correctButton': 0}, {'letters': u'P', 'correctButton': 0}, {'letters': u'R', 'correctButton': 0}, {'letters': u'C', 'correctButton': 0}, {'letters': u'L', 'correctButton': 0}, {'letters': u'H', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'P', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 0}, {'letters': u'L', 'correctButton': 1}, {'letters': u'S', 'correctButton': 1}, {'letters': u'L', 'correctButton': 1}, {'letters': u'C', 'correctButton': 0}, {'letters': u'S', 'correctButton': 0}, {'letters': u'U', 'correctButton': 0}, {'letters': u'K', 'correctButton': 0}, {'letters': u'U', 'correctButton': 1}, {'letters': u'N', 'correctButton': 0}, {'letters': u'U', 'correctButton': 1}, {'letters': u'N', 'correctButton': 0}, {'letters': u'T', 'correctButton': 0}, {'letters': u'P', 'correctButton': 0}, {'letters': u'T', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'F', 'correctButton': 0}, {'letters': u'T', 'correctButton': 1}, {'letters': u'F', 'correctButton': 1}, {'letters': u'T', 'correctButton': 1}, {'letters': u'C', 'correctButton': 0}, {'letters': u'J', 'correctButton': 0}, {'letters': u'C', 'correctButton': 1}, {'letters': u'J', 'correctButton': 1}, {'letters': u'C', 'correctButton': 1}, {'letters': u'M', 'correctButton': 0}, {'letters': u'C', 'correctButton': 1}, {'letters': u'M', 'correctButton': 1}, {'letters': u'Q', 'correctButton': 0}, {'letters': u'X', 'correctButton': 0}, {'letters': u'Q', 'correctButton': 1}, {'letters': u'X', 'correctButton': 1}, {'letters': u'H', 'correctButton': 0}, {'letters': u'R', 'correctButton': 0}, {'letters': u'M', 'correctButton': 0}, {'letters': u'V', 'correctButton': 0}, {'letters': u'B', 'correctButton': 0}, {'letters': u'V', 'correctButton': 1}, {'letters': u'B', 'correctButton': 1}, {'letters': u'V', 'correctButton': 0}, {'letters': u'X', 'correctButton': 0}, {'letters': u'V', 'correctButton': 1}, {'letters': u'X', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'I', 'correctButton': 0}, {'letters': u'B', 'correctButton': 0}, {'letters': u'I', 'correctButton': 1}, {'letters': u'B', 'correctButton': 1}, {'letters': u'I', 'correctButton': 1}, {'letters': u'J', 'correctButton': 0}, {'letters': u'I', 'correctButton': 1}, {'letters': u'R', 'correctButton': 0}, {'letters': u'C', 'correctButton': 0}, {'letters': u'R', 'correctButton': 1}, {'letters': u'Y', 'correctButton': 0}, {'letters': u'A', 'correctButton': 0}, {'letters': u'I', 'correctButton': 0}, {'letters': u'A', 'correctButton': 1}, {'letters': u'I', 'correctButton': 1}, {'letters': u'P', 'correctButton': 0}, {'letters': u'V', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'E', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'A', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}, {'letters': u'A', 'correctButton': 1}, {'letters': u'P', 'correctButton': 1}, {'letters': u'V', 'correctButton': 0}, {'letters': u'P', 'correctButton': 1}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="fixation"/>\u000a    <Routine name="trials_3"/>\u000a    <LoopTerminator name="nBackLoop"/>\u000a    <Routine name="interrupt_overTR"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p70
sS'thisTrial'
p71
(lp72
sS'_exp'
p73
I158021936
sg11
S'nBackLoop'
p74
sg6
g7
sS'thisRepN'
p75
I0
sg26
I01
sg27
g28
sS'data'
p76
g1
(cpsychopy.data
DataHandler
p77
c__builtin__
dict
p78
(dp79
S'ran'
p80
cnumpy.ma.core
_mareconstruct
p81
(cnumpy.ma.core
MaskedArray
p82
cnumpy
ndarray
p83
(I0
tp84
S'b'
tRp85
(I1
(I100
I0
tg37
(S'f4'
I0
I1
tRp86
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S''
S''
NtbsS'order'
p87
g81
(g82
g83
g84
S'b'
tRp88
(I1
(I100
I0
tg86
I00
S''
S''
NtbstRp89
(dp90
S'isNumeric'
p91
(dp92
g80
I01
sg87
I01
ssS'trials'
p93
g67
sS'dataTypes'
p94
(lp95
g80
ag87
asS'dataShape'
p96
(lp97
I100
aI0
asbsS'method'
p98
S'sequential'
p99
sS'sequenceIndices'
p100
cnumpy.core.multiarray
_reconstruct
p101
(g83
(I0
tS'b'
tRp102
(I1
(I100
I0
tg37
(S'i4'
I0
I1
tRp103
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S''
tbsS'finished'
p104
I01
sS'nReps'
p105
I0
sS'nRemaining'
p106
I-1
sS'trialList'
p107
(lp108
g1
(cpsychopy.data
TrialType
p109
g78
(dp110
S'letters'
p111
VF
sS'correctButton'
p112
g36
(g103
S'\x00\x00\x00\x00'
tRp113
stRp114
ag1
(g109
g78
(dp115
g111
VU
sg112
g36
(g103
S'\x00\x00\x00\x00'
tRp116
stRp117
ag1
(g109
g78
(dp118
g111
VF
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp119
stRp120
ag1
(g109
g78
(dp121
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp122
stRp123
ag1
(g109
g78
(dp124
g111
VF
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp125
stRp126
ag1
(g109
g78
(dp127
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp128
stRp129
ag1
(g109
g78
(dp130
g111
VH
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp131
stRp132
ag1
(g109
g78
(dp133
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp134
stRp135
ag1
(g109
g78
(dp136
g111
VV
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp137
stRp138
ag1
(g109
g78
(dp139
g111
VI
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp140
stRp141
ag1
(g109
g78
(dp142
g111
VD
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp143
stRp144
ag1
(g109
g78
(dp145
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp146
stRp147
ag1
(g109
g78
(dp148
g111
VV
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp149
stRp150
ag1
(g109
g78
(dp151
g111
VK
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp152
stRp153
ag1
(g109
g78
(dp154
g111
VV
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp155
stRp156
ag1
(g109
g78
(dp157
g111
VK
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp158
stRp159
ag1
(g109
g78
(dp160
g111
VR
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp161
stRp162
ag1
(g109
g78
(dp163
g111
VF
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp164
stRp165
ag1
(g109
g78
(dp166
g111
VR
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp167
stRp168
ag1
(g109
g78
(dp169
g111
VF
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp170
stRp171
ag1
(g109
g78
(dp172
g111
VD
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp173
stRp174
ag1
(g109
g78
(dp175
g111
VX
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp176
stRp177
ag1
(g109
g78
(dp178
g111
VW
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp179
stRp180
ag1
(g109
g78
(dp181
g111
VK
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp182
stRp183
ag1
(g109
g78
(dp184
g111
VK
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp185
stRp186
ag1
(g109
g78
(dp187
g111
VK
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp188
stRp189
ag1
(g109
g78
(dp190
g111
VK
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp191
stRp192
ag1
(g109
g78
(dp193
g111
VK
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp194
stRp195
ag1
(g109
g78
(dp196
g111
VT
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp197
stRp198
ag1
(g109
g78
(dp199
g111
VU
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp200
stRp201
ag1
(g109
g78
(dp202
g111
VK
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp203
stRp204
ag1
(g109
g78
(dp205
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp206
stRp207
ag1
(g109
g78
(dp208
g111
VL
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp209
stRp210
ag1
(g109
g78
(dp211
g111
VM
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp212
stRp213
ag1
(g109
g78
(dp214
g111
VL
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp215
stRp216
ag1
(g109
g78
(dp217
g111
VM
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp218
stRp219
ag1
(g109
g78
(dp220
g111
VI
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp221
stRp222
ag1
(g109
g78
(dp223
g111
VI
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp224
stRp225
ag1
(g109
g78
(dp226
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp227
stRp228
ag1
(g109
g78
(dp229
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp230
stRp231
ag1
(g109
g78
(dp232
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp233
stRp234
ag1
(g109
g78
(dp235
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp236
stRp237
ag1
(g109
g78
(dp238
g111
VU
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp239
stRp240
ag1
(g109
g78
(dp241
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp242
stRp243
ag1
(g109
g78
(dp244
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp245
stRp246
ag1
(g109
g78
(dp247
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp248
stRp249
ag1
(g109
g78
(dp250
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp251
stRp252
ag1
(g109
g78
(dp253
g111
VI
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp254
stRp255
ag1
(g109
g78
(dp256
g111
VJ
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp257
stRp258
ag1
(g109
g78
(dp259
g111
VH
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp260
stRp261
ag1
(g109
g78
(dp262
g111
VX
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp263
stRp264
ag1
(g109
g78
(dp265
g111
VC
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp266
stRp267
ag1
(g109
g78
(dp268
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp269
stRp270
ag1
(g109
g78
(dp271
g111
VE
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp272
stRp273
ag1
(g109
g78
(dp274
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp275
stRp276
ag1
(g109
g78
(dp277
g111
VC
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp278
stRp279
ag1
(g109
g78
(dp280
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp281
stRp282
ag1
(g109
g78
(dp283
g111
VU
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp284
stRp285
ag1
(g109
g78
(dp286
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp287
stRp288
ag1
(g109
g78
(dp289
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp290
stRp291
ag1
(g109
g78
(dp292
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp293
stRp294
ag1
(g109
g78
(dp295
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp296
stRp297
ag1
(g109
g78
(dp298
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp299
stRp300
ag1
(g109
g78
(dp301
g111
VU
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp302
stRp303
ag1
(g109
g78
(dp304
g111
VM
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp305
stRp306
ag1
(g109
g78
(dp307
g111
VL
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp308
stRp309
ag1
(g109
g78
(dp310
g111
VM
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp311
stRp312
ag1
(g109
g78
(dp313
g111
VV
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp314
stRp315
ag1
(g109
g78
(dp316
g111
VM
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp317
stRp318
ag1
(g109
g78
(dp319
g111
VG
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp320
stRp321
ag1
(g109
g78
(dp322
g111
VR
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp323
stRp324
ag1
(g109
g78
(dp325
g111
VG
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp326
stRp327
ag1
(g109
g78
(dp328
g111
VR
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp329
stRp330
ag1
(g109
g78
(dp331
g111
VG
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp332
stRp333
ag1
(g109
g78
(dp334
g111
VH
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp335
stRp336
ag1
(g109
g78
(dp337
g111
VS
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp338
stRp339
ag1
(g109
g78
(dp340
g111
VX
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp341
stRp342
ag1
(g109
g78
(dp343
g111
VS
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp344
stRp345
ag1
(g109
g78
(dp346
g111
VX
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp347
stRp348
ag1
(g109
g78
(dp349
g111
VS
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp350
stRp351
ag1
(g109
g78
(dp352
g111
VU
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp353
stRp354
ag1
(g109
g78
(dp355
g111
VK
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp356
stRp357
ag1
(g109
g78
(dp358
g111
VH
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp359
stRp360
ag1
(g109
g78
(dp361
g111
VK
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp362
stRp363
ag1
(g109
g78
(dp364
g111
VH
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp365
stRp366
ag1
(g109
g78
(dp367
g111
VN
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp368
stRp369
ag1
(g109
g78
(dp370
g111
VW
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp371
stRp372
ag1
(g109
g78
(dp373
g111
VN
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp374
stRp375
ag1
(g109
g78
(dp376
g111
VW
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp377
stRp378
ag1
(g109
g78
(dp379
g111
VC
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp380
stRp381
ag1
(g109
g78
(dp382
g111
VW
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp383
stRp384
ag1
(g109
g78
(dp385
g111
VE
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp386
stRp387
ag1
(g109
g78
(dp388
g111
VW
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp389
stRp390
ag1
(g109
g78
(dp391
g111
VJ
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp392
stRp393
ag1
(g109
g78
(dp394
g111
VW
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp395
stRp396
ag1
(g109
g78
(dp397
g111
VP
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp398
stRp399
ag1
(g109
g78
(dp400
g111
VB
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp401
stRp402
ag1
(g109
g78
(dp403
g111
VP
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp404
stRp405
ag1
(g109
g78
(dp406
g111
VB
sg112
g36
(g103
S'\x01\x00\x00\x00'
tRp407
stRp408
ag1
(g109
g78
(dp409
g111
VH
sg112
g36
(g103
S'\xff\xff\xff\xff'
tRp410
stRp411
asS'seed'
p412
NsS'thisIndex'
p413
I0
sS'thisN'
p414
I0
sS'thisTrialN'
p415
I0
sS'nTotal'
p416
I0
sS'_warnUseOfNext'
p417
I01
sbasS'savePickle'
p418
I01
sb.